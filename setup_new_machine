#!/usr/bin/env bash

bail() {
	echo "${1}"
	exit 1
}

os=""
case "$(uname -s)" in
Darwin)
	os=macos
	;;
Linux)
	if [[ -f /etc/os-release ]]; then
		os_release_file="/etc/os-release"
		grep -iqE "ubuntu|debian|arch" "${os_release_file}" || bail "Unrecognised linux distro"
		grep -iqE "ubuntu|debian" "${os_release_file}" && os=debianlike
		grep -iq "arch" "${os_release_file}" && os=arch
	else
		bail "Unrecognised Linux distro"
	fi
	;;
*)
	bail "Unrecognised OS"
	;;
esac

[[ -z "${os+x}" ]] && bail "Unrecognised OS"
[[ "${os}" == debianlike ]] && sudo apt-get update
if [[ "${os}" == macos ]]; then
	brew_install_script
	brew_install_script=$(mktemp)
	if curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh >"${brew_install_script}"; then
		/bin/sh "${brew_install_script}"
	else
		bail "Failed to install homebrew"
	fi
	unset brew_install_script
fi

install() {
	local is_gui=false
	while [[ $# -gt 0 ]]; do
		case "$1" in
		--gui)
			is_gui=true
			shift
			;;
		--) # end of options
			shift
			break # break out of while loop
			;;
		*)     # anything else, stop processing
			break # break out of while loop
			;;
		esac
	done
	[[ $# -ne 1 ]] && echo "Usage: install [--gui] package_name"
	[[ $# -ne 1 ]] && exit 1
	local package="${1}"
	case "${os}" in
	macos)
		if "${is_gui}"; then
			brew install --cask "${package}"
		else
			brew install "${package}"
		fi
		;;
	debianlike)
		sudo apt-get install "${package}"
		;;
	arch)
		sudo pacman -Syu --noconfirm "${package}"
		;;
	esac
}

install --gui wezterm
install --gui chrome
install bash
install bat
install broot
install cloc
install eza
install fd
install fish
install flamegraph
install fzf
install git
install gitleaks
install grep
install ncdu
install neovim
install node
install pandoc
install parallel
install ripgrep
install sd
install shellcheck
install shfmt
install sponge
install starship
install stow
install tldr
install tmux
install unzip
install watch
install yazi
install zip
install zoxide
install zsh

npm install jquery

install_rust_toolchain_and_cargo_binstall() {
	local rustup_install_script
	rustup_install_script=$(mktemp)
	if curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs >"${rustup_install_script}"; then
		sh "${rustup_install_script}"
	else
		bail "Faile to install rustup"
	fi
	local cargo_binstall_install_script
	cargo_binstall_install_script=$(mktemp)
	if curl -L --proto '=https' --tlsv1.2 -sSf \
		https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh \
		>"${cargo_binstall_install_script}"; then
		bash "${cargo_binstall_install_script}"
	else
		bail "Failed to install cargo-binstall"
	fi
}

install_rust_toolchain_and_cargo_binstall
cargo install cargo-shuttle
cargo install cargo-update
cargo install sccache
cargo install tokio-console
cargo install tree-sitter-cli

install_for_macos() {
	install gh # Installing on linux is not straightforward and is best done manually
	install gnu-sed
	install --gui aerospace
	install --gui font-fira-code
}

install_for_arch() {
	install nerd-fonts-fira-code
	install github-cli
}

install_for_debian_like() {
	# Download the latest FiraCode Nerd Font release
	pushd /tmp || return 1
	wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.zip
	unzip FiraCode.zip -d "${HOME}/local/share/fonts"
	# Refresh font cache
	fc-cache -fv
}

case "${os}" in
	macos)
		install_for_macos
		;;
	debianlike)
	    install_for_debian_like
        echo "You may want to manually install the github CLI using the instructions found here:"
	    echo "https://github.com/cli/cli/blob/trunk/docs/install_linux.md#debian"
		;;
	arch)
		sudo pacman -Syu --noconfirm "${package}"
		;;
esac
if [[ "${os}" == debianlike ]]; then
fi
