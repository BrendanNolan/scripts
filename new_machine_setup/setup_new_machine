#!/usr/bin/env bash

# Do not run with sudo - you will be prompted for sudo the first time it is needed and then it
# will remain valid for a few minutes while the rest of the installation proceeds

set -euo pipefail

bail() {
	echo "${1}"
	exit 1
}

if [[ "$(id -u)" -eq 0 ]]; then
	bail "Do not run this script as root"
fi

if [[ ! -e "${HOME}/.ssh/id_ed25519.pub" ]]; then
	bail "Setup up your ssh keys"
fi

os=""
case "$(uname -s)" in
Darwin)
	os=macos
	;;
Linux)
	if [[ -f /etc/os-release ]]; then
		os_release_file="/etc/os-release"
		if grep -iq '^ID=fedora$' "${os_release_file}"; then
			os=fedora
		fi
	else
		bail "Unrecognised Linux distro"
	fi
	;;
*)
	bail "Unrecognised OS"
	;;
esac

if [[ -z "${os+x}" ]]; then
	bail "Unrecognised OS"
fi
if [[ "${os}" == macos ]]; then
	brew_install_script=$(mktemp)
	if curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh >"${brew_install_script}"; then
		/bin/sh "${brew_install_script}"
	else
		bail "Failed to install homebrew"
	fi
	unset brew_install_script
fi

update_package_manager() {
	case "${os}" in
	macos)
		brew update
		brew upgrade
		brew clean
		;;
	fedora)
		sudo dnf makecache -y
		;;
	esac
}
update_package_manager

install() {
	local is_gui=false
	while [[ $# -gt 0 ]]; do
		case "$1" in
		--gui)
			is_gui=true
			shift
			;;
		--) # end of options
			shift
			break # break out of while loop
			;;
		*)     # anything else, stop processing
			break # break out of while loop
			;;
		esac
	done
	[[ $# == 1 ]] || bail "Usage: install [--gui] package_name"
	local package="${1}"
	case "${os}" in
	macos)
		if [[ "${is_gui}" == true ]]; then
			brew install --cask "${package}"
		else
			brew install "${package}"
		fi
		;;
	fedora)
		sudo dnf install -y "${package}"
		;;
	esac
}

install bash
install bat
install cloc
install eza
install fish
install fontconfig
install fzf
install git
install gitleaks
install grep
install moreutils
install ncdu
install neovim
install pandoc
install parallel
install ripgrep
install sd
install shellcheck
install shfmt
install stow
install tmux
install tree-sitter-cli
install unzip
install zip
install zoxide
install zsh

rm -f "${HOME}/.bashrc"
rm -f "${HOME}/.bash_profile"
rm -f "${HOME}/.zshrc"
rm -f "${HOME}/.config"
mkdir -p "${HOME}/dev" || exit 1
git clone git@github.com:BrendanNolan/dotfiles.git "${HOME}/dev/dotfiles"
git clone git@github.com:BrendanNolan/scripts.git "${HOME}/dev/scripts"
"${HOME}/dev/scripts/reload_dotfiles"

install_for_macos() {
	brew tap 'dlvhdr/formulae'
	brew tap 'felixkratz/formulae'
	brew tap 'homebrew-zathura/zathura'
	brew tap 'homebrew/cask-fonts'
	brew tap 'nikitabobko/tap'
	install 'dlvhdr/formulae/diffnav'
	install 'felixkratz/formulae/borders'
	install gh
	install gnu-sed
	install 'homebrew-zathura/zathura/zathura'
	install 'homebrew-zathura/zathura/zathura-pdf-poppler'
	install node
	install npm
	install watch
	install --gui aerospace
	install --gui font-fira-code
	install --gui mactex
}

install_for_fedora() {
	install '@c-development'
	install '@development-tools'

	# github cli
	sudo dnf install -y dnf5-plugins
	# sudo dnf config-manager addrepo --overwrite --from-repofile=https://cli.github.com/packages/rpm/gh-cli.repo
	sudo dnf install -y gh --repo gh-cli

	install fira-code-fonts
	install nodejs
	install procps-ng
	install util-linux
}

case "${os}" in
macos)
	install_for_macos
	;;
fedora)
	install_for_fedora
	;;
esac

npm install jquery
npm install tldr

install_rust_toolchain_and_cargo_binstall() {
	local rustup_install_script
	rustup_install_script=$(mktemp)
	if curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs >"${rustup_install_script}"; then
		sh "${rustup_install_script}" -y || bail "Failed to install rustup"
	else
		bail "Failed to install rustup"
	fi
	local cargo_binstall_install_script
	cargo_binstall_install_script=$(mktemp)
	if curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh >"${cargo_binstall_install_script}"; then
		bash "${cargo_binstall_install_script}" || bail "Failed to install cargo-binstall"
	else
		bail "Failed to install cargo-binstall"
	fi
}
install_rust_toolchain_and_cargo_binstall
cargo install broot
cargo install cargo-shuttle
cargo install cargo-update
cargo install fd
cargo install flamegraph
cargo install sccache
cargo install starship
cargo install tokio-console
cargo install wezterm
cargo install yazi
